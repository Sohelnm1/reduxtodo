{"ast":null,"code":"const initialDate = {\n  list: []\n};\n\nconst todoReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialDate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADDTODO\":\n      const {\n        id,\n        data\n      } = action.payload;\n      return { ...state,\n        list: [...state.list, {\n          id: id,\n          data: data\n        }]\n      };\n\n    case \"DELETE_TODO\":\n      const newList = state.list.filter(elem => elem.id !== action.id);\n      return { ...state,\n        list: newList\n      };\n\n    case \"REMOVE_TODO\":\n      return { ...state,\n        list: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducers;","map":{"version":3,"sources":["/home/user/Android/reduxtodo/src/reducers/todoReducers.js"],"names":["initialDate","list","todoReducers","state","action","type","id","data","payload","newList","filter","elem"],"mappings":"AAAA,MAAMA,WAAW,GAAE;AACfC,EAAAA,IAAI,EAAC;AADU,CAAnB;;AAMA,MAAMC,YAAY,GAAG,YAA6B;AAAA,MAA5BC,KAA4B,uEAAtBH,WAAsB;AAAA,MAAVI,MAAU;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,SAAL;AAEA,YAAM;AAACC,QAAAA,EAAD;AAAIC,QAAAA;AAAJ,UAAUH,MAAM,CAACI,OAAvB;AACA,aAAM,EACF,GAAGL,KADD;AAEFF,QAAAA,IAAI,EAAC,CACD,GAAGE,KAAK,CAACF,IADR,EAED;AACIK,UAAAA,EAAE,EAACA,EADP;AAEIC,UAAAA,IAAI,EAACA;AAFT,SAFC;AAFH,OAAN;;AAYA,SAAK,aAAL;AACI,YAAME,OAAO,GAAEN,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAmBC,IAAD,IAAQA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACE,EAA7C,CAAf;AAGJ,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAAEQ;AAFJ,OAAN;;AAMA,SAAI,aAAJ;AAAkB,aAAM,EACpB,GAAGN,KADiB;AAEpBF,QAAAA,IAAI,EAAC;AAFe,OAAN;;AAIlB;AAAS,aAAOE,KAAP;AA9Bb;AAgCH,CAjCD;;AAkCA,eAAeD,YAAf","sourcesContent":["const initialDate ={\n    list:[]\n}\n\n\n\nconst todoReducers = (state=initialDate,action) =>{\n    switch(action.type){\n        case \"ADDTODO\":\n\n        const {id,data}=action.payload;\n        return{\n            ...state,\n            list:[\n                ...state.list,\n                {\n                    id:id,\n                    data:data\n\n            }\n        ]\n        }\n\n        case \"DELETE_TODO\":\n            const newList= state.list.filter((elem)=>elem.id !== action.id)\n\n    \n        return{\n            ...state,\n            list: newList\n            \n        }\n\n        case\"REMOVE_TODO\":return{\n            ...state,\n            list:[]\n        }\n        default :return state;\n    }\n}\nexport default todoReducers;"]},"metadata":{},"sourceType":"module"}